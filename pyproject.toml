[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "openai-structured"
version = "2.1.0"
description = "Structured output for OpenAI API"
authors = ["Yaniv Golan <yaniv@golan.name>"]
readme = "README.md"
packages = [{include = "openai_structured", from = "src"}]
include = ["src/openai_structured/py.typed"]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
openai = "^1.12.0"
pydantic = { version = "^2.6.3", extras = ["mypy"] }
jsonschema = "^4.23.0"
aiohttp = "^3.11.11"
typing-extensions = "^4.9.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
flake8 = "^6.0"
flake8-pyproject = "^1.2.3"
black = "24.8.0"
isort = "^5.13"
mypy = "^1.0"
pre-commit = "^3.6.0"
pytest-asyncio = "^0.25.2"
pytest-mock = "^3.14.0"
build = "^1.2.2.post1"
twine = "^6.0.1"
python-dotenv = "^1.0.1"
anyio = {version = "3.7.1", extras = ["trio"]}
sphinx = ">=7.0,<8.0"
types-pyyaml = "^6.0.12.20241230"
types-pygments = "^2.19.0.20250107"
types-chardet = "^5.0.4.6"
types-cachetools = "^5.5.0.20240820"
types-requests = "^2.31.0.20240125"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0"
sphinx-rtd-theme = "^1.0"
myst-parser = "^2.0.0"

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203"]

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "normal"
strict = true
show_error_codes = true
warn_unused_configs = true

# Path configuration
mypy_path = ["src", "tests"]
# Only check source and test files, exclude examples as they prioritize clarity over strict typing
files = ["src/openai_structured", "tests"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

# Schemas and test models
[[tool.mypy.overrides]]
module = "openai_structured.*"
check_untyped_defs = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "tests.*"
check_untyped_defs = true
disallow_untyped_decorators = false

[tool.black]
line-length = 79
target-version = ["py39"]
include = '\.pyi?$'
preview = false
required-version = "24.8.0"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
python_files = ["test_*.py"]
markers = [
    "live: mark test as a live test that should use real API key",
    "asyncio: mark test as requiring async loop",
]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
target-version = "py39"

[tool.poetry.group.examples]
optional = true

[tool.poetry.group.examples.dependencies]
tenacity = "^8.2.3"
asyncio-throttle = "^1.0.2"

[tool.poetry.scripts]
openai-structured-refresh = "openai_structured.scripts.update_registry:main"
